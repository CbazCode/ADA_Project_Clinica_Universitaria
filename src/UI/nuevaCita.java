/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Clases.Cita;
import java.awt.Color;
import javax.swing.border.LineBorder;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author Kioshi
 */
public class nuevaCita extends javax.swing.JDialog {
    private LineBorder border = new LineBorder((new Color(107, 179, 35)),5);
    int xx,xy;
    String horaArchivo = "";
    String fechaArchivo ="";
    Date horaCita;
    DateFormat hourFormat = new SimpleDateFormat("HH:mm");
   
    /**
     * Creates new form nuevoMedico
     */
    public nuevaCita(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); 
        this.getRootPane().setBorder(border);
        SpinnerNumberModel nmh = new SpinnerNumberModel();
        nmh.setMaximum(24);
        nmh.setMinimum(0);
        jSpinnerHora.setModel(nmh);
        SpinnerNumberModel nmm = new SpinnerNumberModel();
        nmm.setMaximum(60);
        nmm.setMinimum(0);
        jSpinnerMinutos.setModel(nmm);
        this.setLocationRelativeTo(null); 
        this.getRootPane().setBorder(border);
        ((JSpinner.DefaultEditor) jSpinnerHora.getEditor()).getTextField().setEditable(false);
        ((JSpinner.DefaultEditor) jSpinnerMinutos.getEditor()).getTextField().setEditable(false);
    }
    
    void escribir(){
        File file = new File("src/archivos/cita.txt");
        FileWriter fichero = null;
        PrintWriter pw = null;
        try
        {
            fichero = new FileWriter(file.getAbsoluteFile(), true);
            pw = new PrintWriter(fichero);
            
            pw.println(tCodigoCita.getText()+"  "+tDNIusuario.getText()+"  "+tEspecialidad.getText()+"  "+fechaArchivo+"  "+horaArchivo+"  "+tporPagar.getText());
            
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (null != fichero)
              fichero.close();
           } catch (Exception e2) {
              e2.printStackTrace();
           }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tCodigoCita = new javax.swing.JTextField();
        tDNIusuario = new javax.swing.JTextField();
        tEspecialidad = new javax.swing.JTextField();
        jFecha = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jSpinnerMinutos = new javax.swing.JSpinner();
        jSpinnerHora = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        bGrabar = new javax.swing.JButton();
        bCancelar = new javax.swing.JButton();
        tporPagar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(107, 179, 35));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registro de Cita");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(239, 251, 239));

        jLabel2.setText("Codigo de cita:");

        jLabel3.setText("DNI del usuario:");

        jLabel6.setText("Fecha");

        jLabel7.setText("Hora");

        jLabel9.setText("Especialidad:");

        tCodigoCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tCodigoCitaActionPerformed(evt);
            }
        });
        tCodigoCita.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tCodigoCitaKeyTyped(evt);
            }
        });

        tDNIusuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tDNIusuarioActionPerformed(evt);
            }
        });
        tDNIusuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tDNIusuarioKeyTyped(evt);
            }
        });

        tEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tEspecialidadActionPerformed(evt);
            }
        });

        jLabel10.setText(":");

        jPanel4.setBackground(new java.awt.Color(239, 251, 239));

        bGrabar.setText("Grabar");
        bGrabar.setMaximumSize(new java.awt.Dimension(100, 30));
        bGrabar.setMinimumSize(new java.awt.Dimension(100, 30));
        bGrabar.setPreferredSize(new java.awt.Dimension(100, 30));
        bGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGrabarActionPerformed(evt);
            }
        });

        bCancelar.setText("Cancelar");
        bCancelar.setMaximumSize(new java.awt.Dimension(100, 30));
        bCancelar.setMinimumSize(new java.awt.Dimension(100, 30));
        bCancelar.setPreferredSize(new java.awt.Dimension(100, 30));
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tporPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tporPagarActionPerformed(evt);
            }
        });

        jLabel8.setText("Por Pagar");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tDNIusuario, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(tEspecialidad))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tCodigoCita, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tporPagar)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jSpinnerHora, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinnerMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addContainerGap(112, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tCodigoCita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tporPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tDNIusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinnerHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx,y-xy);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        xx=evt.getX();
        xy=evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_bCancelarActionPerformed
    
    public boolean validarCita(){
        long spinnerHoraLong, spinnerMinutosLong;
        int spinnerHoraInt, spinnerMinutosInt;
        boolean aprobado = true;     
        spinnerHoraInt = Integer.parseInt(jSpinnerHora.getValue().toString());
        spinnerMinutosInt = Integer.parseInt(jSpinnerMinutos.getValue().toString());
        spinnerHoraLong = Long.parseLong(jSpinnerHora.getValue().toString());
        spinnerMinutosLong = Long.parseLong(jSpinnerMinutos.getValue().toString());
        if((spinnerHoraInt>24 || spinnerHoraInt <0) || (spinnerMinutosInt>60 || spinnerMinutosInt<0)){
            JOptionPane.showOptionDialog(null, "Error en el ingreso de hora y minutos, verifique campos", "ERROR", JOptionPane.DEFAULT_OPTION,
                     JOptionPane.ERROR_MESSAGE, null, null, null); 
            aprobado = false;   
        }else{
            horaCita=new Date(2020,01,01,0,0);
            long hora = horaCita.getTime()+ spinnerHoraLong*60*60*1000+ spinnerMinutosLong*60*1000;
            horaCita.setTime(hora);
            horaArchivo= hourFormat.format(horaCita);  
            fechaArchivo = ((JTextField)jFecha.getDateEditor().getUiComponent()).getText();
            if(existeCita()){
                aprobado = false;
                JOptionPane.showOptionDialog(null, "Cita ya existe", "ERROR", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, null, null);
            }else{
                if(!existeEspecialidad()){
                    aprobado = false;
                    JOptionPane.showOptionDialog(null, "La especialidad no existe", "ERROR", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, null, null);
                }else{
                    if(!doctorDisponible()){
                        aprobado = false;
                        JOptionPane.showOptionDialog(null, "Doctor no se encuentra disponible en el horario elegido", "ERROR", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, null, null);
                    }else{
                        if(!existePaciente()){
                            aprobado = false;
                            JOptionPane.showOptionDialog(null, "Paciente no existe", "ERROR", JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE, null, null, null);
                        }
                    }
                }
            }
            
        }
        if(aprobado){
            return true;
        }else{
            return false;
        }
        
    }
    
    public boolean existeCita(){
       boolean flag = false;
       int codigoAux, codigoAuxTextField;
       File file = null;
       FileReader fr = null;
       BufferedReader br = null;
       try{
           file = new File("src/archivos/cita.txt");
           fr = new FileReader(file);
           br = new BufferedReader(fr);
           Object[] linea = br.lines().toArray();
           for(int i = 0; i<linea.length;i++){
               String[] row = linea[i].toString().split("  ");
               codigoAux = Integer.parseInt(row[0]);              
               codigoAuxTextField = Integer.parseInt(tCodigoCita.getText());
               if(codigoAux == codigoAuxTextField){
                   flag = true;
                   break;
               }else{
                   flag = false;
               }
           }
           br.close();
       }catch(Exception e){
           System.out.println("Error: " + e);
       }
       if(flag){
           return true;
       }else{
           return false;
       }
    }
    
    
    public boolean existeEspecialidad(){
        boolean flag = false;
       File file = null;
       FileReader fr = null;
       BufferedReader br = null;
       try{
           file = new File("src/archivos/medicos.txt");
           fr = new FileReader(file);
           br = new BufferedReader(fr);
           Object[] linea = br.lines().toArray();
           for(int i = 0; i<linea.length;i++){
               String[] row = linea[i].toString().split("  ");
               if(row[7].equals(tEspecialidad.getText()) ){
                   flag = true;
                   break;  
               }else{
                  flag = false; 
               }
           }
           br.close();
       }catch(Exception e){
           System.out.println("Error: " + e);
       }
       if(flag){
           return true;
       }else{
           return false;
       }
    }
    public boolean existePaciente(){
        boolean flag = false;
       File file = null;
       FileReader fr = null;
       BufferedReader br = null;
       try{
           file = new File("src/archivos/paciente.txt");
           fr = new FileReader(file);
           br = new BufferedReader(fr);
           Object[] linea = br.lines().toArray();
           for(int i = 0; i<linea.length;i++){
               String[] row = linea[i].toString().split("  ");
               if(row[0].equals(tDNIusuario.getText()) ){
                   flag = true;
                   break;   
               }else{
                   flag = false; 
               }
           }
           br.close();
       }catch(Exception e){
           System.out.println("Error: " + e);
           //Hasta q se cree archivo paciente dejar el return
           //return true;
       }
       if(flag){
           return true;
       }else{
           return false;
       }
    }   
    public boolean doctorDisponible(){
       boolean flag = true;
       File file = null;
       FileReader fr = null;
       BufferedReader br = null;
       try{
           file = new File("src/archivos/cita.txt");
           fr = new FileReader(file);
           br = new BufferedReader(fr);
           Object[] linea = br.lines().toArray();
           for(int i = 0; i<linea.length;i++){
               String[] row = linea[i].toString().split("  ");
               if(row[2].equals(tEspecialidad.getText()) ){
                   if(row[4].equals(horaArchivo)){
                       flag = false;
                       break; 
                   }else{
                       flag = true; 
                   }                   
               }else{
                   flag=true;
               }
           }
           br.close();
       }catch(Exception e){
           System.out.println("Error: " + e);
       }
       if(flag){
           return true;
       }else{
           return false;
       }

    }
    private void bGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGrabarActionPerformed
        Date fecha = jFecha.getDate();
        
        if(!tDNIusuario.getText().isEmpty() &&
                !tCodigoCita.getText().isEmpty() &&   
                !tDNIusuario.getText().isEmpty() &&  
                (jFecha != null)&&  
                !tEspecialidad.getText().isEmpty()){ 
                
                if(validarCita()){
                    escribir();
                    int mensaje = JOptionPane.showOptionDialog(null, "Se grabo correctamente", "Grabado", JOptionPane.DEFAULT_OPTION,
                             JOptionPane.INFORMATION_MESSAGE, null, null, null);
                    if(mensaje == 0){
                        dispose();
                    } 
                }else{
                    System.out.println("cita invalida");
                }
            
        }else{
            int mensaje = JOptionPane.showOptionDialog(null, "Error al grabar, falta completar datos", "ERROR", JOptionPane.DEFAULT_OPTION,
                     JOptionPane.ERROR_MESSAGE, null, null, null);   
        }
    }//GEN-LAST:event_bGrabarActionPerformed

    private void tCodigoCitaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCodigoCitaKeyTyped
        if (tCodigoCita.getText().length()== 8) {
            evt.consume(); 
        } 
        if(evt.getKeyChar()<'0' || evt.getKeyChar()>'9' && evt.getKeyChar()!='\b'){
            evt.consume();
        }
             
    }//GEN-LAST:event_tCodigoCitaKeyTyped

    private void tCodigoCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tCodigoCitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tCodigoCitaActionPerformed

    private void tEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tEspecialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tEspecialidadActionPerformed

    private void tDNIusuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tDNIusuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tDNIusuarioActionPerformed

    private void tDNIusuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tDNIusuarioKeyTyped
        if (tDNIusuario.getText().length()== 8) {
            evt.consume(); 
        } 
        if(evt.getKeyChar()<'0' || evt.getKeyChar()>'9' && evt.getKeyChar()!='\b'){
            evt.consume();
        }
    }//GEN-LAST:event_tDNIusuarioKeyTyped

    private void tporPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tporPagarActionPerformed
       
    }//GEN-LAST:event_tporPagarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(nuevaCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(nuevaCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(nuevaCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(nuevaCita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                nuevaCita dialog = new nuevaCita(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bGrabar;
    private com.toedter.calendar.JDateChooser jFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner jSpinnerHora;
    private javax.swing.JSpinner jSpinnerMinutos;
    public javax.swing.JTextField tCodigoCita;
    private javax.swing.JTextField tDNIusuario;
    private javax.swing.JTextField tEspecialidad;
    private javax.swing.JTextField tporPagar;
    // End of variables declaration//GEN-END:variables
}
